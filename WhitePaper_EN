# **Ruff IoT Open Blockchain Whitepaper**

Working Draft, October 2017, Rev. 0.7.1 

## **Summary **

Ruff is a platform designed to improve commerce by uniting the Internet of Things and blockchain technology. Ruff incorporates a distributed operating system with an open blockchain, using virtual business to business networks and a consensus algorithm to realize better offline solutions for information flow and product sourcing needs. 

In CAP choices, the traditional blockchain sacrifices usability to enhance the consistency and distribution fault tolerance. Ruff, through a combination of edge computing and blockchain applications, enhances usability so as to meet the Internet of Things demand for real-time flexibility .

The key problem that we want to solve is about providing trusted interoperability and paid interoperability between different IoT device systems, and using these devices’ computing power to build an open Ruff ecosystem.

 

 

## **Background**

The Internet of Things often proves an isolated, closed system wherein wide area IoT and local IoT are unable to interact. Privatized industrial systems and IDC-based IT networks are difficult to connect. However, IoT data often requires high consistency and security, which is a problem that no centralized technology can readily solve. Modern IoT technologies are often accompanied by redundant nodes and mixed up clouds, but blockchain offers the possibility of a total solution to consistency and security issues. Unfortunately, blockchain development currently suffers from lack of infrastructure, high technical threshold, and excessive technical risk. So far, there are no mature solutions to the scalability problems that are frequently pointed out. As a result, the current distributed app development issparse and remains at the virtual level, not yet having real world interactivity.

 

### **Fragmentation**

From its beginning the Internet of Things has always been fragmented. For instance, it still takes a specific mobile app to open each of a growing number of bike sharing models, while in telecommunications you can generally call anyone on any carrier. Why is there no simpler solution for transportation options? There is no standard for equivalent nodes, and the result is break down. 

Moreover, beyond transportation tools, the IoT connected things we have around us today like doors, lights, alarms, coffee machines, and all so on are on closed isolated networks. This fragmentation is not just prevalent among different product types but also among products belonging to the same types as well. There is simply not enough homogeneity among IoT connected things for current models to offer the networkability we already enjoy in other ways through computers and mobiledevices. 

Do these problems mean there is nopossible solution at present? The answer is negative. What is needed is  the introduction of operating system and middleware concepts, compatibility with the fragmented spectrum IoT hardware devices, and a unified programming interface.

 

### **Standardization**

IT technology is standardized overall. For example, personal computers interact with servers through the http protocol presented on the browser, which is a form of standardization. The network for exchanges between different bitcoin nodes is also standardized. Only by constantly standardizing fragmented products will it be possible to unify communication among nodes or create a consensus network among nodes.

The entire Internet of Things industry has been striving for standardization for over 20 years. On the physical level, standards exist for WiFi, BLE, Zigbee and so on, and at the level of industrial networks there are Modbus, Profibus, industrial ethernet, and so on, through in industrial networks different standards can be incompatible. 

Nevertheless standardization has not been achieved at the application level. Machine B and Machine B may be able to connect, but Machine A does not know any instructions for manipulating or requesting data from Machine B. Worse still, even within devices different drivers and different software vendors follow different proprietary protocols, making it difficult for applications to interact.

 

![application protocols](file:////Users/tianwei/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image001.jpg)

### **Ease of use**

Sometimes commands will not be readable. WIth `GPIO_14` `high level - low level` operations, serial port compatibility and switch roles may sometimes be unknown. You often need the following definition.

```
RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
GPIO_LED.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_11 | GPIO_Pin_14 | GPIO_Pin_15;
GPIO_LED.GPIO_Mode = GPIO_Mode_Out_PP;
GPIO_LED.GPIO_Speed = GPIO_Speed_50MHz;
GPIO_Init(GPIOB, &GPIO_LED);
```

However, this approach is difficult to be promote in the application engineer community, as its threshold is considerable, it is easy to write buggy code, and readabilitycontinues to remain low. Engineers prefer the following programming methods:

```
$('led-green').on();
$('led-red').off();
```

The above paragraph uses Ruff OS programming code, and more can be found at http://www.ruff.io. As of December 2017, 13,521 engineers worldwide have registered with the Ruff community, with more than half of them purchasing the Ruff board and deploying code.

When there is a standard application layer protocol between nodes, the communication between nodes remains at the abstract level of interactions between devices, such as payments, requests, verifications, and so on. When multiple devices connect interactively the abstraction level will tend to be very high. At the most basic level, this is the interaction between different applications. 

Unifying standards in the application layer is the most urgent challenge to solve for the Internet of Things. It is also an important infrastructure consideration for the interconnectivity  and interoperability of all things in the future.

IoT standardization will not be implemented via a centralized cloud. Rather, starting from computing at thee dge computing node level, the traditional module + cloud model will abandoned. This application logic will form a unified programming model based outside of firmware.

 

## Reliable interoperability between IoT devices

Every smart device has an address, andwhen the device is sold the merchant enters this address into the hardware andprovides a QR code for containing a private address key in the hardware’spackaging. The control center, by obtaining the private key, sends the device abind command (signed with the private key) that enables complete control of thehardware. After the binding, the control center can delete the device's privatekey and save it’s own private key.

- Peer-to-peer control: 

The control centeroperates the device by initiating a control TX with its own signature to thedevice. (No chain involvement is required, but control center and equipment areonline when needed.)

- Chain-state based control：

When the control endcan not establish a point-to-point connection with the device, the control endcan consume tokens and write a "state change" TX or "controlcommand" TX on the chain to operate the target device. (Each of these TXare equally necessary.) The target device can synchronize its status or controlcommands directly with the chain, or through a trusted light node (such as abridge device). Blockchain thus solves the problems inherent in cloud operationand the maintenance costs and stability issues of connecting all devices to thecloud.

- Automated control:

There is no need to use contracts to set the logic of "turnoff the air conditioner when the temperature is below 15 ° C". Such customcontrol logic can be implemented using the console app built with traditionaldevelopment language, reducing equipment support contract costs, but alsoreduce the likelihood of main chain jamming when running contracts.

Based on the implementation of theabove, multiple vendors can together form an open ecosystem on Ruff.

## Time Sequence Data

Most IoT data is arranged in timesequences, making it a natural fit for the blockchain. Timestamp data can beapplied to prevent replay attacks and solve problems caused by concurrentdeadlocks. In the past this data was not effectively combined on isolatedcentralized networks, with the ultimate issue of data consistency incirculation. ERP, MES, WMS and other centralized systems simply cannot ensureconsistent product traceability in the production, storage, and circulationprocesses.

Ruff's edge computing node willsynchronize the timestamp as the core data value, thus controlling the businesslogic within the local area network. Timestamps will be synchronized across theentire blockchain network, tracing the behavior of all nodes in the network atthe same time to make the state of the network restorable at a given point.

**Consensus mechanism**

To account for the computing power ofmaster devices in the Internet of Things we chose DPoS as Ruff’s consensusalgorithm. 

According to this algorithm, people whohold tokens across the network can choose block producers through a votingsystem. Anyone can participate in block production once elected.

This system produces a block every 9seconds. At any one moment, only one producer is authorized to produce a block.If the block is not successfully delivered within a certain time period it willbe skipped over.

Any full node can be a candidate for aspecific transaction, and the system generates 105 proxy agents from candidatesvia a voting mechanism.

The following figure shows the number ofproxy agents under the circumstances of 5 possible block distributions:

 

![1](file:////Users/tianwei/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image003.jpg)

Web resources are not free, and a rewardwill be issued whenever a block containing IoT contracts is generated.

Block generation in our system iscounted based on 105 blocks per period. At the beginning of each period, theprocess of picking 105 proxy agents from candidates is called a round. There isa fixed number of 105 slots in a round, and there will be 105 blocks. Allcandidates can vote (VOTETX) to select the next round of proxy agents. Eachblock contains its own round and slot numbers in addition to its own height.Round numbers are continuous, while slot numbers may not be continuous.

Candidates must initiate a transactiontype Vote on a turn, and select a given number of proxy agents from a validcandidate list. (If the total number of candidates exceeds 318, then previousround proxies will not be allowed to be re-elected.)

When the current round of block slotsreaches 105:

 

●     If a quorum for a vote cannot be obtained, allcurrent proxies will be reelected by default for the next round. 

●      If a votingquorum is reached, the 105 proxies with the highest vote count will be selectedfor the next round. 

Based on the hash of the last slot blockof the previous round, a definite list of round proxies’ block orders can beobtained.

Each block, distributed by the agentresponsible for the slot, is distributed at a 9 second interval from theprevious block. Other agents not currently responsible for block distributionwill be responsible for transaction collection, and when it is their turn todistribute must give priority to transactions not yet included. (Transactioncollection is determined by round.)

If for example it is proxy agent N’sturn but the agent’s node is dropped, then the next agent will automaticallydistribute the next block after 18 seconds. A slot vacancy will be reported forthe previous round, and for the current round the number of blocks still reach105.

By analyzing the chain data for votetransactions and block slots, as well as round value. You can thereforedetermine which candidates do and do not work well. During a round, an agentmay initiate a poll to disqualify certain candidates. If a proxy agent fails todeliver a block on time, for example, the agent will be blocked fromdistribution for the next 24 hours. Then all candidates will vote on whether todisqualify the candidate or not. 

 

### **Chain control **

**![2](file:////Users/tianwei/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image005.jpg)******

In the typical structure above, thelight nodes and the control node are on the same intranet. When a light nodebinds to the control node, the control node is allowed to control the lightnode from the master chain.

We use command signatures to achievechain-based control.

●     Deviceinitialization：

The manufacturer of the light nodedevice writes a public-private key pair into the device and then prints theprivate key on the device's instructions or package in the form of atwo-dimensional code.

●     Devicebinding：

When activated the light node is placedin a network environment where it can connect to and communicate with thecontrol node. The control node then initiates a binding command, which containsthe public key of the control node. After the command is created, the device’sprivate key must be submitted to sign the binding command. After the signatureis complete the binding command is sent to the device. After receiving thebinding command, the device verifies the signature. The verification isperformed by recording the control node’s public key. The control node can nolonger store the light node's private key.

●     Controlcommand verification：

The command received by the light nodewill verify and agree to execute the command as long as it has the signature ofits recorded control node.

●     Loggingcommand history onto the master chain：

If necessary, the control node will logall control commands that have been issued, and whenever communication with thebackbone is restored, publish the history and control result records to themaster chain.

### **Lightning chain differential mechanism**

The control node can create a fixedformat contract on the master chain using a CreateContract transaction. Thecontract is generally formatted in the terms "If you give me a certainnumber of tokens, I will allow you to use the following command under certainconditions." The successful creation of the contract will return to savethe contract block height and transaction hash (together referred to as theContract Address).

The user can initiate a Call transactionto a contract address. After saving the transaction to the master chain, thecontrol node will continually check for transactions from the initiatedcontract. Once a transaction is detected, the control node checks to see if theuser has enough tokens to complete it. If so, the transaction will besuccessful, initiating a Return transaction containing the result of thecontract execution and a not-yet committed code for a Review transaction.Review is a multi-signed “Seq” signature transaction.

The Return transaction is confirmed bythe master chain after the contract is successfully executed, at which time theuser's tokens will be transferred to the control node's account. After sometime, if the user feels that the hardware is not handling the subsequentcommands correctly, then he can extract the Review transaction’s previouslysigned Return transaction, sign his own digital signature, and submit a Reviewtransaction to the master chain, and the negative report will take effect. Asthis sequence is fixed, users will have to make registered complaints by dueprocess. 

If a particular contract gathersnumerous such reports, the control app will interactively prompt the user thatthe contract has a large number of negative reviews.

 

## **Node classification**

Internet of Things nodes are often verysmall computing units. Due to their power consumption requirements, theircomputing power is very low, their memory is very small, and the MCU can notexceed 512 kb. The Linux version of a node is at the router level, and thestorage is likewise very small, with MCU only having 1M Flash memory. It isvery difficult for such a node to participate in consensus processes.Therefore, the structure of the Internet of Things is necessarily composed ofmultiple nodes comprising a network. There will be one or more applications inthis network, and applications will go through the application interface andinteract on the blockchain. The computing power required for local applicationswill be drawn from the edge computing unit, potentially a gateway or router.Applications can manage the local network in a centralized or decentralized wayand interact with the chain. According to this, we classify the nodes in theRuff ecosystem as follows:

### **Light nodes (Executors)**

The application control interface will request networkauthentication information, and after verifying correct implementation willissue a contract to the user, such as the release of property access rights.The light node role can be assumed by a simple device without storage capacity,and the cost can be as low as a few dollars.

 

### **Fullnodes****（****Recorders****）******

记载全部的信息，参与事件登记或是更改的广播，可将票投给其他节点。 并能成为代表节点。由网络里性能较强的设备扮演。由于未使用 PoW 的共识算法，对全节点的算力要求较低，200 美金的 HTPC，高度路由器，NAS 等家用智能设备均可扮演。

Full nodes will be able to record allinformation, participate in event registration or modify broadcasts, and votefor other nodes. Moreover, full nodes can become representative nodes. Deviceswith high performance will act have a greater role as nodes on the network. Dueto the consensus algorithm of not using PoW and the low computational burden onthe entire node, home smart devices such as a $200 HTPC, high speed routers,and NAS can take on this role.

### **Representative nodes (Arbiters)**

The nodes with the most votes in every105 nodes should bear the responsibility of enforcing the rules and packagingblocks. If found committing malicious acts, they will be rejected by the votersand lose the qualification of representatives. The representative node can obtainrevenue from mining by distributing blocks.

### **Control nodes (SPV wallet)**

Central nodes have a certain computingpower and can save all blockchain data to quickly verify whether specifictransactions have been logged on the chain. They can use P2P agreements tosafely execute transactions. Compared with other nodes, they do not need to beonline 24 hours per day. Normally they can participate via smartphone app orthrough devices with relatively low storage. (For example, low-end routers orsmart home appliances.)

 

 

![3](file:////Users/tianwei/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image007.jpg)

Smart contracts for things

Contracts for smart things areestablished at the abstract level. The decentralize app (Dapp) interacts withthe abstraction of the object via Ruff’s OS, and then interacts with the Ruffchain. The combination of these two actions enables smart contractimplementation in the real world. For example, offline real estate transactionscan executed passed in this way, such as in hotels or sharing economyproperties with respect to accessing door locks, rental equipment, the use ofswitches, and other functions that can be managed by contractual control.

In addition to the right to use suchthings, the value generated by the means of production may also be governed bycontracts for things such as power generation, mining and manufacturing.

Common Dapp scenarios could be financialleasing, asset securitization, asset pledging, supply chain finance, propertyregistration and real estate transactions, and so on. Traditional blockchaintechnology itself cannot back rights to use or production capacity matters withsmart contracts.

 

### **Application scenarios**

#### **Property right transfer and rental**

The control end can enable binding to acustom smart contract and thus realize the exchange of rights to use equipment.Contracts are structured in such formats such as “If you pay me 50 tokens, Iwill accept the following control commands you send within the next hour,"or, "If you agree to pay me 100 tokens, then within the next 3 hours Iwill deduct 1 of your tokens every 10 minutes." Chain support does notupdate the expansion of thusly formatted contracts. Rather, these are bettersuited to blockchain than smart contracts. 

When this type of contract is used onthe control side, a pre-signature transaction for quality feedback will also begiven.

#### **Open data transactions**

Product, project life cycle management,and upstream and downstream industry chains can share real-time data so as toachieve traceability, quality tracking, capacity forecasting, and distributionfunctions.

#### **Asset management and securitization**

Assets generating value via transactionscan include uses of generators, mining machines, charging piles, sharedbicycles, retail equipment, and so on. This generate revenue can be securitizedinto circulation. Equipment and supply chain management that consume valuablescan also use this mechanism for reverse circulation.

Enterprises using IoT devices as acarrier to finance lease assets can set up the issuance of financial leasingtrust plans. Leasing companies use their own professional advantage in theleasing business, and at the completion of the leasing project, the financiallyleased assets can be transferred out through the trust. At the same delegatetrust proxies can, according to this system, entrust their legally held fundsto investment companies. The investment company can act in accordance with thewishes of the principal in its own name, for beneficiaries in the financialleasing business. It is therefore essentially a designated purpose trust fundand a financial product that specializes in financial lease claims.

The financial leasing company separatesor reorganizes the leasing right of the finance lease item and entrusts it tothe trust company to sell to a specific investor in the financial market. Theinvestor enjoys the rights to finance lease rental during the trust period. Thetrust company delivers the investor's purchase money to the financial leasingcompany. The financial leasing company discounts the receivable rent,eliminates the financing liabilities of the corresponding items on the balancesheet, and achieves off-balance-sheet financing, which not only solves thefinancing problem of the finance leasing company, but can also use asset liststo achieve the purpose of better adjusting the business asset structure. Inaddition, the related expenses such as the financial lease fees of the projectand such will have already been assessed and charged, and the revenue of thefinancial leasing company is rapidly monetized. At the same time, for trustcompanies, it provides a carrier and mode of cooperation with financial leasingcompanies, which helps to improve the leasing capacity of trust companies.

The leasing company may consider theissue of products by the trust company as a fixed financing channel, andcommunicate with the trust company while conducting research on the financingproject. After the completion of the project, the trust products can be issuedsimultaneously, reducing the occupation time of funds and simultaneouslycharging fees as needed. This thus creates a new profit model with briefduration and fast returns. For example, in the cooperation between Ruff and aphotovoltaic operation and maintenance company, the production of photovoltaicpower can be monitored and securitized in real time. Based on the status ofphotovoltaic power generation companies can understand the real-time status ofequipment and asset production efficiency and make relevant data available tousers, creating access to more transparent and credible product information.

![电站1](file:////Users/tianwei/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image008.jpg)

![测算](file:////Users/tianwei/Library/Group%20Containers/UBF8T346G9.Office/TemporaryItems/msohtmlclip/clip_image009.jpg)

### **Evaluation mechanism**

When a contract is completed and theuser does not obtain the desired result, the user will be able to submit anindividually signed contract transaction to issue negative feedback. An examplecould be when a vending machine fails to dispense a beverage a user has paidfor with tokens. The user can contact the seller of the vending machine for acertain period of time, so that the problem can be resolved and a bad reviewcan be made by using the pre-signed transaction. When user feedback isoverwhelmingly negative, the control system will issue user promptsaccordingly. 

## **Ruffcoin tokens**

Introducing Ruff’s built in public chaintoken: Ruffcoin, the virtual currency of contracts. The Ruff coin will be thebenchmark for incentives, spending, and trading within the Ruff public chainecosystem.

### **Currency mechanism**

Within the Ruff ecosystem, one orseveral types of tokens are generated as a standard of settlement. Consumersconsume tokens during property or data transactions. Use of equipment rightsand data generating transactions will also be settled using tokens. AnyRuff-based smart contract can claim its own token for settlement. However, inthe IoT ecolosystem, providers who participate in verification, accounting andother activities within the IoT ecosystem will also use the default Ruffcoin,and consumers will also deploy contracts and consume resources using Ruffcoin.

For instance: If user A needs to requesta resource or user permission from node B, user A needs to pay a certain amountof a particular token for this access, and further to pay an amount to node Cfor packaging the transaction. 

## ** **

## **Privacy and security**

Since the edge calculation unit carriesthe vast majority of data, the data reported is determined by the application.Most of the logic of the application developers is offline, and desensitizationof online data is controlled by developers.

Ruff's local ad hoc network is alsodecentralized. In a local application network, once the main application nodefails, the application logic will pass to another node and continue forcompletion, thereby ensuring the consistency of the local application network.

The security of Internet of things isguaranteed by the OS’s security. Ruff uses a symmetric key, and the key is nottransmitted over the network. In addition, the chain network releases aone-time token based on the timestamp to the application network, whichtherefore resists replay attacks.

 

## **About Ruff**

 

Ruff was founded in 2014 with edgecomputing at its core and the goal of replacing original embedded operatingsystems. Ruff’s community has already grown to encompass the work of tens ofthousands of developers, and is the industry's most prevalent IoT operatingsystem. In addition to a core of technically skilled team members, team membershave also been listed for Forbes China’s 2017 30 Under 30 mention and othernotable awards and accolades for achievements in business development andmarketing.

Since establishment, Ruff has earnedawards and recognition from industry figures including:

●      Microsoft’sShanghai Accelerator 

●      2017 GE PredixHackathon (Best Innovator Award)

●      2016 TechCrunch Beijing (Innovation Challenge Champion)

●      2016 GiTC (BestTechnology Innovator Award)

●      2016 MicrosoftInnovation Summit (Best Investment Award)

## **Partnerships and support **

Since its founding Ruff has alreadyestablished partnerships with leading enterprises including:

●     Microsoft China

●      Schneider

●      Baidu Cloud

●     muRata

## **Tech team**

### **Roy Li**

A well-known expert in network securityand the Internet of Things experts, Roy Li is also a senior instructor at FudanUniversity. As former technical director for Nokia (North America) he was responsiblefor OVI development and Symbian operating system research and development. Hehas offered security consulting services for security companies such asSymantec and VeriSign. He has also advised TNB, RealChain, and AIDOC.

### **Alex Goh**

Alex Goh has more than 15 years ofmanagement and operations experience in China and Asia Pacific, including withFosun Investment Southeast Asia, formerly as a 360 Cloud venture partner andPresident. He has served at HP and Dell in a number of departmental executive posts,working for Hewlett-Packard as vice president of enterprise groups and Internet+ general manager, and as Dell's global business partnerships manager.

## **Investors and investment groups**

●     DFund

○     Former Ink Weather co-founder, well-knownblockchain and digital asset exchange investor, and Internet venture capitalinvestment fund founders. 

●      Wenxin VentureCapital Partners

○      Lanting Juxian(NYSE: LITB) co-founder

○      Blog China(Beijing) Technologies Ltd. co-founder

○      US Blog ChinaTechnology Co. co-founder

●      Wugang, CEO ofBixin

●      ConcensusCapital

●      Fly FutureCapital

●      Bian Jiang, Baidu Lead Product Manager，Senior Vice President；WeXFin founder &CEO，Hongtai Fund Aplus managing partner

●      Kong Huawei,Director of Zhongguancun Shanghai 

●     Wang Yuehua DJF Dragonfund China foundingpartner

## **Roadmap**

Ruff is staged to become a new platformfor IoT-based infrastructure development that is decentralized, open,open-source, and efficient. In Ruff’s ecosystem, different actors can obtaintheir desired resources through a marketplace where the provision of resourcesis rewarded in tokens which can in turn be used to obtain resources, forming anautonomous economic entity. 

## **Ruff public chain open-source plan**

After firmly establishing the basicframework for advancing the Ruff project, we will open more of our core modulesfor open-source development, and look forward to gathering the involvement ofmore developers.

| **Date**      | **Open-source implementation**           |
| ------------- | ---------------------------------------- |
| December 2017 | Large-scale,  low-latency consensus algorithm |
| April 2018    | Large-scale  blockchain bookkeeping algorithm |
| October 2018  | Smart contract  algorithm                |
| March 1019    | Ruff public chain  platform              |

[^1]: THIS DOCUMENT AND ANY OTHERDOCUMENTS PUBLISHED IN ASSOCIATION WITH THIS WHITE PAPER RELATE TO A POTENTIALTOKEN OFFERING TO PERSONS (CONTRIBUTORS) IN RESPECT OF THE INTENDED DEVELOPMENTAND USE OF THE NETWORK BY VARIOUS PARTICIPANTS. THIS DOCUMENT DOES NOTCONSTITUTE AN OFFER OF SECURITIES OR A PROMOTION, INVITATION OR SOLICITATIONFOR INVESTMENT PURPOSES. THE TERMS OF THE CONTRIBUTION ARE NOT INTENDED TO BE AFINANCIAL SERVICES OFFERING DOCUMENT OR A PROSPECTUS. THE TOKEN OFFERINGINVOLVES AND RELATES TO THE DEVELOPMENT AND USE OF EXPERIMENTAL SOFTWARE ANDTECHNOLOGIES THAT MAY NOT COME TO FRUITION OR ACHIEVE THE OBJECTIVES SPECIFIEDIN THIS WHITE PAPER. THE PURCHASE OF TOKENSREPRESENTS A HIGH RISK TO ANYCONTRIBUTORS. TOKENS DO NOT REPRESENT EQUITY, SHARES, UNITS, ROYALTIES ORRIGHTS TO CAPITAL, PROFIT OR INCOME IN THE NETWORK OR SOFTWARE OR IN THE ENTITYTHAT ISSUES TOKENS OR ANY OTHER COMPANY OR INTELLECTUAL PROPERTY ASSOCIATEDWITH THE NETWORK OR ANY OTHER PUBLIC OR PRIVATE ENTERPRISE, CORPORATION,FOUNDATION OR OTHER ENTITY IN ANY JURISDICTION. THE TOKEN IS NOT THEREFOREINTENDED TO REPRESENT A SECURITY INTEREST.
[^2]: McKinsey Research
[^3]: McKinsey Research

 
